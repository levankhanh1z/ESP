-- LocalScript
local espTransparency = 0.3
local espParts = {}

-- Function to check if a value is a number
local function isNumber(value)
    return type(value) == "number"
end

-- Function to update saves (you can modify this according to your needs)
local function updateSaves()
    print("Saves updated.")
end

-- Function to add ESP for a specific part
local function addPartESP(part)
    local a = Instance.new("BoxHandleAdornment")
    a.Name = part.Name:lower().."_PESP"
    a.Parent = part
    a.Adornee = part
    a.AlwaysOnTop = true
    a.ZIndex = 0
    a.Size = part.Size
    a.Transparency = espTransparency
    a.Color = BrickColor.new("Lime green")
end

-- Connect the partAdded function to DescendantAdded event
local partEspTrigger = nil
local function partAdded(part)
    if #espParts > 0 and table.find(espParts, part.Name:lower()) then
        addPartESP(part)
    elseif partEspTrigger then
        partEspTrigger:Disconnect()
        partEspTrigger = nil
    end
end

-- Command to set ESP transparency
local function setESPTransparency(args)
    espTransparency = (args[1] and isNumber(args[1]) and args[1]) or 0.3
    updateSaves()
end

-- Command to add part to ESP
local function addPartToESP(args)
    local partEspName = args[1]:lower()
    if not table.find(espParts, partEspName) then
        table.insert(espParts, partEspName)
        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("BasePart") and v.Name:lower() == partEspName then
                addPartESP(v)
            end
        end
    end
    if not partEspTrigger then
        partEspTrigger = workspace.DescendantAdded:Connect(partAdded)
    end
end

-- Example usage
setESPTransparency({0.5})  -- Set ESP transparency to 0.5
addPartToESP({"MyPart"})   -- Add "MyPart" to ESP
